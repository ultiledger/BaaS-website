{"version":3,"sources":["webpack:///./src/core/utils/validators.js","webpack:///src/components/register/register.vue","webpack:///./src/components/register/register.vue?056b","webpack:///./src/components/register/register.vue"],"names":["validators","methods","socCrCodeValidator","rule","value","callback","test","Error","certNoValidator","certType","bankNoValidator","this","$api","cust","customer","checkAcctNo","cusId","then","ret","telephoneValidator","params","phoneNo","userId","excludeCurUser","vue_common_default","a","api","core","checkUserExist","existForTrue","param","emailValidator","loginNameValidator","bsp","user","checkCode","type","msg","checkNum","register","mixins","data","_this","registerForm","cusName","contactorName","contactorPhone","contactorId","password","password2","verifyCode","msgVerifyCode","newUser","loading","time","smsCodeLoading","btnText","getVerifyCode","rules","required","trigger","validator","length","checkCustomerExist","message","min","max","computed","smsBtnText","watch","resetForm","phoneCallback","obj","userName","go","bean","serviceUrl","window","location","href","$router","push","name","getSMS","_this2","console","debug","$refs","validateField","errorMessage","timer","setInterval","clearInterval","sendSMS","submitForm","formName","_this3","validate","valid","form","username","kaptchaReceived","grant_type","client","appCode","config","msgLogin","entId","$store","dispatch","_ref","isLogin","resetFields","refreshVerifyCode","register_register","render","_vm","_h","$createElement","_c","_self","_v","staticClass","attrs","show-left","slot","ref","model","label-width","fixed-width","prop","label","span","disabled","placeholder","tips","$$v","$set","expression","_e","staticStyle","padding-right","width","src","on","click","padding","_s","text-align","$event","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/12.7db71eb03eb7990ef414.js","sourcesContent":["import Vue from 'vue';\nexport default {\n  methods: {\n    // 统一社会信用代码校验器\n    socCrCodeValidator (rule, value, callback) {\n      if (!value || value === '') {\n        callback(new Error('请输入统一社会信用代码'));\n      } else {\n        if (!(/(^[0-9A-HJ-NPQRTUWXY]{2}\\d{6}[0-9A-HJ-NPQRTUWXY]{10}$)/.test(value))) {\n          callback(new Error('请输入合理的统一社会信用代码'));\n        }\n        callback();\n      }\n    },\n    // 证件号码校验器\n    certNoValidator (rule, value, callback) {\n      let certType = rule.certType;\n      switch (certType) {\n        case 'id_type_1':\n          if (!(/(^[1-9]\\d{5}(18|19|([23]\\d))\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9Xx]$)|(^[1-9]\\d{5}\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{2}$)/.test(value))) {\n            callback(new Error('请输入正确的证件号码'));\n          } else {\n            callback();\n          }\n          break;\n        case 'id_type_2':\n          if (!(/^[a-zA-Z0-9]{5,17}$/.test(value))) {\n            callback(new Error('请输入正确的证件号码'));\n          } else {\n            callback();\n          }\n          break;\n        case 'id_type_3':\n          if (!(/^[HMChmc]{1}([0-9]{8,10})$/.test(value))) {\n            callback(new Error('请输入正确的证件号码'));\n          } else {\n            callback();\n          }\n          break;\n        case 'id_type_4':\n          if (!(/^[0-9]{8,10}$/.test(value))) {\n            callback(new Error('请输入正确的证件号码'));\n          } else {\n            callback();\n          }\n          break;\n        default:\n          callback(new Error('请输入正确的证件号码'));\n      }\n    },\n    // 银行卡号校验器\n    bankNoValidator (rule, value, callback) {\n      if (!value || value === '') {\n        callback(new Error('银行卡号码不能为空'));\n      } else {\n        if (!(/^([1-9]{1})\\d{1,30}$/.test(value))) {\n          callback(new Error('请输入合理的银行卡号码'));\n        } else {\n          this.$api.cust.customer.checkAcctNo(value, rule.cusId ? rule.cusId : '').then(ret => {\n            if (ret) {\n              callback(new Error('银行卡号码已注册'));\n            } else {\n              callback();\n            }\n          });\n        }\n      }\n    },\n    // 验证电话号码\n    telephoneValidator (rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请输入手机号码'));\n      } else {\n        if (!(/^1[34578]\\d{9}$/.test(value))) {\n          callback(new Error('请输入合理手机号码'));\n        } else {\n          let params = {'phoneNo': value};\n          if (rule.userId) {\n            params.userId = rule.userId;\n          }\n          if (rule.excludeCurUser) {\n            params.excludeCurUser = rule.excludeCurUser;\n          }\n          Vue.api.core.checkUserExist(params).then(ret => {\n            if (rule.existForTrue) {\n              if (ret) {\n                callback();\n                if (rule.callback) {\n                  rule.callback(ret, rule.param);\n                }\n              } else {\n                callback(new Error('该手机号还未注册'));\n                rule.callback();\n              }\n            } else {\n              if (ret) {\n                callback(new Error('手机号码已注册'));\n              } else {\n                callback();\n              }\n            }\n          });\n        }\n      }\n    },\n    // 验证邮件\n    emailValidator (rule, value, callback) {\n      if (!value || value === '') {\n        callback();\n      }\n      let reg = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(.[a-zA-Z0-9_-])+/;\n      if (!reg.test(value)) {\n        callback(new Error('邮箱格式不正确'));\n      } else {\n        callback();\n      }\n    },\n    // 检验登录名是否存在\n    loginNameValidator (rule, value, callback) {\n      if (!value) {\n        callback();\n      } else {\n        this.$api.bsp.user.checkCode(rule.userId, value).then(ret => {\n          if (ret.type === 'success' && !ret.msg) {\n            callback(new Error('登录名已存在'));\n          } else {\n            callback();\n          }\n        });\n      }\n    },\n    checkNum (rule, value, callback) {\n      if (value) {\n        if (!(/^\\d*$/.test(value))) {\n          callback(new Error('请输入数字!'));\n        } else {\n          callback();\n        }\n      }\n      callback();\n    }\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/utils/validators.js","<template>\n  <div>\n    <pl-header></pl-header>\n    <pl-layout class=\"layout-contianer\" :show-left='false'>\n      <pl-content-box slot=\"right\">\n        <br>\n        <div class=\"bolck-title\">\n          <span>注册信息</span>\n        </div>\n        <el-form :model=\"registerForm\" :rules=\"rules\" ref=\"registerForm\" label-width=\"100px\" class=\"register-form\">\n          <pl-content-box-block :fixed-width=\"false\">\n            <pl-content-box-card class=\"accreditation-content-box no-border\">\n              <div class=\"accreditation-content\">\n               <!-- <el-form-item prop=\"cusName\" label=\"企业名称\">\n                  <el-input  v-model=\"registerForm.cusName\" placeholder=\"请输入您公司的完整名称\" tips=\"请填写工商局注册的公司全称，支持中文、字母、数字或半角括号的组合，3-30个字符\">\n                  </el-input>\n                </el-form-item>-->\n                <el-form-item prop=\"contactorName\" label=\"用户姓名\">\n                  <el-row>\n                    <el-col :span=\"12\">\n                      <el-input :disabled=\"!newUser\" v-model=\"registerForm.contactorName\" placeholder=\"请输入用户姓名\" tips=\"您的姓名将作为系统的用户名\">\n                      </el-input>\n                    </el-col>\n                    <!--<el-col :span=\"12\">-->\n                      <!--<pl-content-item-text>-->\n                        <!--<el-radio v-model=\"newUser\" :label=\"true\">我是新用户</el-radio>-->\n                        <!--<el-radio v-model=\"newUser\" :label=\"false\">我已注册过</el-radio>-->\n                      <!--</pl-content-item-text>-->\n                    <!--</el-col>-->\n                  </el-row>\n\n                </el-form-item>\n                <el-form-item prop=\"contactorPhone\" label=\"手机号\"\n                    :rules=\"[\n                    {required: true, message: '手机号码不能为空', trigger: 'change'},\n                    {callback: phoneCallback,required: true, trigger: 'blur', validator: this.telephoneValidator, existForTrue: !newUser }]\">\n                    <el-input  v-model=\"registerForm.contactorPhone\" placeholder=\"建议使用常用手机\" tips=\"注册成功后，您可以用该手机登录和找回密码\">\n                    </el-input>\n                </el-form-item>\n                <el-form-item prop=\"password\" label=\"登录密码\" v-if=\"newUser\">\n                  <el-input  v-model=\"registerForm.password\" type=\"password\" placeholder=\"请输入登录密码\" tips=\"建议使用字母、数字和符号两种以上的组合，6-20个字符\">\n                  </el-input>\n                </el-form-item>\n                <el-form-item prop=\"password2\" label=\"确认密码\"  v-if=\"newUser\">\n                  <el-input  v-model=\"registerForm.password2\" type=\"password\" placeholder=\"请再次输入密码\" tips=\"请再次输入密码\">\n                  </el-input>\n                </el-form-item>\n                <el-form-item prop=\"verifyCode\" label=\"验证码\"  v-if=\"newUser\">\n                  <el-row >\n                    <el-col :span=\"20\"  style=\"padding-right: 4px;\">\n                      <el-input v-model=\"registerForm.verifyCode\" placeholder=\"请输入验证码\">\n                      </el-input>\n                    </el-col>\n                    <el-col :span=\"4\" class=\"text-right\">\n                      <div class=\"code-img\"><img label=\"点击刷新验证码\"  width=\"80\" :src=\"verifyCode\"  @click=\"refreshVerifyCode\"/></div>\n                    </el-col>\n                  </el-row>\n                </el-form-item>\n                <el-form-item prop=\"msgVerifyCode\" label=\"短信验证码\">\n                  <el-row >\n                    <el-col :span=\"19\" style=\"padding-right: 5px;\">\n                      <el-input v-model=\"registerForm.msgVerifyCode\" placeholder=\"请输入手机验证码\">\n                      </el-input>\n                    </el-col>\n                    <el-col :span=\"5\" class=\"text-right\" >\n                      <el-button type=\"primary\" :loading=\"smsCodeLoading\" @click=\"getSMS\" style=\"padding: 10px 14px;\">{{smsBtnText}}</el-button>\n                    </el-col>\n                  </el-row>\n                <!--  <el-input  v-model=\"registerForm.msgVerifyCode\" placeholder=\"请输入手机验证码\">\n                    <template slot=\"append\">获取验证码</template>\n                  </el-input>-->\n                </el-form-item>\n                <el-form-item style=\"text-align: center;\">\n                  <el-button type=\"primary\" @click=\"submitForm('registerForm')\" :loading=\"loading\">{{btnText}}</el-button>\n                  <el-button @click=\"resetForm('registerForm')\">重置</el-button>\n                </el-form-item>\n              </div>\n            </pl-content-box-card>\n        </pl-content-box-block>\n        </el-form>\n      </pl-content-box>\n    </pl-layout>\n  </div>\n</template>\n\n<script>\n  import validators from 'src/core/utils/validators.js';\n//  import {MsgType} from 'core/constants';\n  import config from 'src/config';\n  export default {\n    mixins: [validators],\n    data () {\n      let validatePassword = (rule, value, callback) => {\n        if (value !== this.registerForm.password) {\n          callback(new Error('两次密码不一致'));\n        }\n        callback();\n      };\n      let validateCusName = (rule, value, callback) => {\n        if (value === '' || !value) {\n          callback(new Error('请输入企业名称'));\n        } else if (value.length < 3 || value.length > 30) {\n          callback(new Error('长度在 3 到 30 个字符'));\n        }\n        this.$api.cust.register.checkCustomerExist({'cusName': value}).then(ret => {\n          if (ret) {\n            callback(new Error('已存在企业，请直接登录'));\n          }\n          callback();\n        });\n      };\n      return {\n        registerForm: {\n          cusName: '',\n          contactorName: '',\n          contactorPhone: '',\n          contactorId: '',\n          password: '',\n          password2: '',\n          verifyCode: '',\n          msgVerifyCode: ''\n        },\n        newUser: true,\n        loading: false,\n        time: 0,\n        smsCodeLoading: false,\n        btnText: '立即注册',\n        verifyCode: this.$api.core.getVerifyCode(),\n        rules: {\n          cusName: [\n            { required: true, trigger: 'blur', validator: validateCusName }\n          ],\n          contactorName: [\n            { required: true, message: '请输入您的姓名', trigger: 'blur' },\n            { min: 2, max: 20, message: '长度在 2 到 20 个字符', trigger: 'blur' }\n          ],\n          contactorPhone: [\n            { required: true, trigger: 'blur', validator: this.telephoneValidator }\n          ],\n          password: [\n            { required: true, message: '请输入登录密码', trigger: 'blur' },\n            { min: 6, max: 20, message: '长度在 6 到 20 个字符', trigger: 'blur' }\n          ],\n          password2: [\n            { required: true, trigger: 'blur', validator: validatePassword }\n          ],\n          verifyCode: [\n            { required: true, trigger: 'blur', message: '请输入验证码' }\n          ],\n          msgVerifyCode: [\n            { required: true, trigger: 'blur', message: '请输入手机验证码' }\n          ]\n        }\n      };\n    },\n    computed: {\n      smsBtnText () {\n        return this.smsCodeLoading ? this.time + 's' : '获取验证码';\n      }\n    },\n    watch: {\n      newUser () {\n        let cusName = this.registerForm.cusName;\n        this.resetForm('registerForm');\n        this.registerForm.cusName = cusName;\n        this.registerForm.contactorId = '';\n      }\n    },\n    methods: {\n      phoneCallback (obj) {\n        if (obj) {\n          this.registerForm.contactorName = obj.userName;\n          this.registerForm.contactorId = obj.userId;\n        } else {\n          this.registerForm.contactorName = '';\n          this.registerForm.contactorId = '';\n        }\n      },\n      go (msg) {\n        if (msg.bean && msg.bean.serviceUrl) {\n          window.location.href = msg.bean.serviceUrl;\n        } else {\n          this.$router.push({'name': 'bsp.accreditation.register-success'});\n        }\n      },\n      getSMS () {\n        console.debug(\"getSMS...\");\n        this.$refs['registerForm'].validateField('contactorPhone', errorMessage => {\n          console.debug(\"errorMessage=\"+errorMessage);\n          if (!errorMessage) {\n            this.smsCodeLoading = true;\n            this.time = 60;\n            let timer = setInterval(() => {\n              this.time--;\n              if (this.time === 0) {\n                this.smsCodeLoading = false;\n                clearInterval(timer);\n              }\n            }, 1000);\n            this.$api.cust.register.sendSMS({phoneNo: this.registerForm.contactorPhone}).then(ret => {\n//              this.$notify({\n//                message: ret.msg,\n//                type: MsgType.INFO,\n//                duration: 3000\n//              });\n            });\n          }\n        });\n      },\n      submitForm (formName) {\n        this.$refs[formName].validate((valid) => {\n          if (valid) {\n            this.loading = true;\n            this.btnText = '正在注册...';\n            this.$api.cust.register.register(this.registerForm).then((ret) => {\n              this.loading = false;\n              this.btnText = '立即注册';\n              if (ret.type === 'success') {\n                // 注册成功之后登陆\n                let form = {};\n                if (this.newUser) {\n                  form = {\n                    'username': this.registerForm.contactorPhone,\n                    'password': this.registerForm.password,\n                    'kaptchaReceived': this.registerForm.verifyCode,\n                    'grant_type': 'password',\n                    'client': 'frontend',\n                    appCode: config.appCode\n                  };\n                } else {\n                  form = {\n                    'username': this.registerForm.contactorPhone,\n                    'msgVerifyCode': this.registerForm.msgVerifyCode,\n                    'grant_type': 'password',\n                    'client': 'frontend',\n                    msgLogin: true,\n                    appCode: config.appCode,\n                    'entId': ret.bean.entId\n                  };\n                }\n                this.loading = true;\n                this.btnText = '正在登录...';\n                this.$store.dispatch('login', form)\n                  .then(({isLogin, msg}) => {\n                    this.loading = false;\n                    this.btnText = '立即注册';\n                    if (isLogin) {\n                      this.go(msg);\n                    }\n                  }\n                );\n              }\n            });\n          } else {\n            return false;\n          }\n        });\n      },\n      resetForm (formName) {\n        this.$refs[formName].resetFields();\n      },\n      refreshVerifyCode () {\n        this.verifyCode = this.$api.core.getVerifyCode();\n      }\n    }\n  };\n</script>\n\n<style lang=\"scss\" rel=\"stylesheet/scss\" scoped>\n  @import \"./scss/style\";\n  /*.register-form{\n    width: 56%;\n    margin: 40px 22% 0 22%;\n    background-color: #fff;\n  }*/\n  .code-img{\n    height: 36px;\n    img{\n      cursor: pointer;\n    }\n    background: url('../login/img/loading.gif') no-repeat center 0;\n  }\n</style>\n\n\n\n\n\n// WEBPACK FOOTER //\n// src/components/register/register.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('pl-header'),_vm._v(\" \"),_c('pl-layout',{staticClass:\"layout-contianer\",attrs:{\"show-left\":false}},[_c('pl-content-box',{attrs:{\"slot\":\"right\"},slot:\"right\"},[_c('br'),_vm._v(\" \"),_c('div',{staticClass:\"bolck-title\"},[_c('span',[_vm._v(\"注册信息\")])]),_vm._v(\" \"),_c('el-form',{ref:\"registerForm\",staticClass:\"register-form\",attrs:{\"model\":_vm.registerForm,\"rules\":_vm.rules,\"label-width\":\"100px\"}},[_c('pl-content-box-block',{attrs:{\"fixed-width\":false}},[_c('pl-content-box-card',{staticClass:\"accreditation-content-box no-border\"},[_c('div',{staticClass:\"accreditation-content\"},[_c('el-form-item',{attrs:{\"prop\":\"contactorName\",\"label\":\"用户姓名\"}},[_c('el-row',[_c('el-col',{attrs:{\"span\":12}},[_c('el-input',{attrs:{\"disabled\":!_vm.newUser,\"placeholder\":\"请输入用户姓名\",\"tips\":\"您的姓名将作为系统的用户名\"},model:{value:(_vm.registerForm.contactorName),callback:function ($$v) {_vm.$set(_vm.registerForm, \"contactorName\", $$v)},expression:\"registerForm.contactorName\"}})],1)],1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"prop\":\"contactorPhone\",\"label\":\"手机号\",\"rules\":[\n                  {required: true, message: '手机号码不能为空', trigger: 'change'},\n                  {callback: _vm.phoneCallback,required: true, trigger: 'blur', validator: this.telephoneValidator, existForTrue: !_vm.newUser }]}},[_c('el-input',{attrs:{\"placeholder\":\"建议使用常用手机\",\"tips\":\"注册成功后，您可以用该手机登录和找回密码\"},model:{value:(_vm.registerForm.contactorPhone),callback:function ($$v) {_vm.$set(_vm.registerForm, \"contactorPhone\", $$v)},expression:\"registerForm.contactorPhone\"}})],1),_vm._v(\" \"),(_vm.newUser)?_c('el-form-item',{attrs:{\"prop\":\"password\",\"label\":\"登录密码\"}},[_c('el-input',{attrs:{\"type\":\"password\",\"placeholder\":\"请输入登录密码\",\"tips\":\"建议使用字母、数字和符号两种以上的组合，6-20个字符\"},model:{value:(_vm.registerForm.password),callback:function ($$v) {_vm.$set(_vm.registerForm, \"password\", $$v)},expression:\"registerForm.password\"}})],1):_vm._e(),_vm._v(\" \"),(_vm.newUser)?_c('el-form-item',{attrs:{\"prop\":\"password2\",\"label\":\"确认密码\"}},[_c('el-input',{attrs:{\"type\":\"password\",\"placeholder\":\"请再次输入密码\",\"tips\":\"请再次输入密码\"},model:{value:(_vm.registerForm.password2),callback:function ($$v) {_vm.$set(_vm.registerForm, \"password2\", $$v)},expression:\"registerForm.password2\"}})],1):_vm._e(),_vm._v(\" \"),(_vm.newUser)?_c('el-form-item',{attrs:{\"prop\":\"verifyCode\",\"label\":\"验证码\"}},[_c('el-row',[_c('el-col',{staticStyle:{\"padding-right\":\"4px\"},attrs:{\"span\":20}},[_c('el-input',{attrs:{\"placeholder\":\"请输入验证码\"},model:{value:(_vm.registerForm.verifyCode),callback:function ($$v) {_vm.$set(_vm.registerForm, \"verifyCode\", $$v)},expression:\"registerForm.verifyCode\"}})],1),_vm._v(\" \"),_c('el-col',{staticClass:\"text-right\",attrs:{\"span\":4}},[_c('div',{staticClass:\"code-img\"},[_c('img',{attrs:{\"label\":\"点击刷新验证码\",\"width\":\"80\",\"src\":_vm.verifyCode},on:{\"click\":_vm.refreshVerifyCode}})])])],1)],1):_vm._e(),_vm._v(\" \"),_c('el-form-item',{attrs:{\"prop\":\"msgVerifyCode\",\"label\":\"短信验证码\"}},[_c('el-row',[_c('el-col',{staticStyle:{\"padding-right\":\"5px\"},attrs:{\"span\":19}},[_c('el-input',{attrs:{\"placeholder\":\"请输入手机验证码\"},model:{value:(_vm.registerForm.msgVerifyCode),callback:function ($$v) {_vm.$set(_vm.registerForm, \"msgVerifyCode\", $$v)},expression:\"registerForm.msgVerifyCode\"}})],1),_vm._v(\" \"),_c('el-col',{staticClass:\"text-right\",attrs:{\"span\":5}},[_c('el-button',{staticStyle:{\"padding\":\"10px 14px\"},attrs:{\"type\":\"primary\",\"loading\":_vm.smsCodeLoading},on:{\"click\":_vm.getSMS}},[_vm._v(_vm._s(_vm.smsBtnText))])],1)],1)],1),_vm._v(\" \"),_c('el-form-item',{staticStyle:{\"text-align\":\"center\"}},[_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.loading},on:{\"click\":function($event){_vm.submitForm('registerForm')}}},[_vm._v(_vm._s(_vm.btnText))]),_vm._v(\" \"),_c('el-button',{on:{\"click\":function($event){_vm.resetForm('registerForm')}}},[_vm._v(\"重置\")])],1)],1)])],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-1794f584\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/register/register.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1794f584\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./register.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./register.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./register.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1794f584\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./register.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-1794f584\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/register/register.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}